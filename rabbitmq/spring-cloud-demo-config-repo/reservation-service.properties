# reservation service app props
message=Spring Cloud Config: Reservation Service\n

# h2 database server
spring.datasource.url=jdbc:h2:tcp://localhost/~/reservationdb
spring.datasource.username=dbuser
spring.datasource.password=dbpass
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.hibernate.ddl-auto=validate

##
# http://docs.spring.io/spring-cloud-stream/docs/current-SNAPSHOT/reference/htmlsingle/#binding-properties
# spring.cloud.stream.bindings.<channelName>.<property>=<value>
##
# define the destination to which the input MessageChannel should be bound
spring.cloud.stream.bindings.input.destination=reservations
# spring.cloud.stream.bindings.input.binder=rabbit
# spring.cloud.stream.bindings.input.contentType=application/json

# ensures 1 node in a group gets message (point-to-point, not a broadcast)
spring.cloud.stream.bindings.input.group=reservations-group
# ensure that the Q is durable
spring.cloud.stream.bindings.input.durableSubscription=true


# spring.redis.host=192.168.99.100
# spring.redis.port=6379
# spring cloud stream / rabbitmq
spring.rabbitmq.host=192.168.99.100
spring.rabbitmq.port=5672

# zipkin / spring cloud sleuth
spring.zipkin.host=192.168.99.100
spring.zipkin.port=9410
